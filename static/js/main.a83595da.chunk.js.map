{"version":3,"sources":["styles/Form.styled.jsx","redux/contacts/contacts-actions.jsx","components/Form/Form.jsx","styles/Contacts.styled.jsx","components/Contacts/Contacts.jsx","styles/App.styled.jsx","components/Filter/Filter.jsx","components/App/App.jsx","reportWebVitals.js","redux/contacts/contacts-reducer.jsx","redux/store.jsx","index.js"],"names":["StyledForm","styled","form","Label","label","Input","input","props","theme","secondary","main","Button","button","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Form","useState","setName","setNumber","dispatch","useDispatch","handleChange","e","currentTarget","value","onSubmit","preventDefault","type","pattern","title","required","onChange","ContactsList","ul","Contact","li","ContactInfo","span","DeleteBtn","Contacts","contacts","useSelector","state","allContacts","filter","normalizedFilterValue","toLowerCase","trim","contact","includes","getFilterContacts","items","map","onClick","MainContainer","div","Title","h1","Section","Filter","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","find","alert","_","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a83595da.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const StyledForm = styled.form`\r\n  width: 600px;\r\n  padding: 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  border: 1px black solid;\r\n  border-radius: 5px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  box-shadow: rgb(25 26 27 / 20%) 4px 4px 8px 0px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  font-size: 16px;\r\n  width: 300px;\r\n  padding: 4px;\r\n  margin-top: 5px;\r\n  color: ${(props) => props.theme.secondary};\r\n  background-color: ${(props) => props.theme.main};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  border: 0.5px black solid;\r\n  &:hover {\r\n    background-color: #8ecafc;\r\n  }\r\n`;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const addContact = createAction(\"contacts/add\", (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(\"contacts/delete\");\r\nexport const changeFilter = createAction(\"contacts/filter\");\r\n","import { Label, Button, Input, StyledForm } from \"styles/Form.styled\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { addContact } from \"redux/contacts/contacts-actions\";\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addContact(name, number));\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledForm onSubmit={handleSubmit}>\r\n        <Label>\r\n          Имя\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Телефон\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </StyledForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactsList = styled.ul`\r\n  margin: 0;\r\n  padding: 24px;\r\n  list-style: none;\r\n`;\r\n\r\nexport const Contact = styled.li`\r\n  position: relative;\r\n  padding: 10px;\r\n  padding-left: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  border: 1px gray solid;\r\n  border-radius: 10px;\r\n  box-shadow: rgb(25 26 27 / 20%) 1px 1px 1px 1px;\r\n  :not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const ContactInfo = styled.span`\r\n  margin-right: 56px;\r\n\r\n  svg {\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 5px;\r\n    color: #010174;\r\n  }\r\n`;\r\n\r\nexport const DeleteBtn = styled.button`\r\n  display: block;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  border: 0.5px black solid;\r\n  &:hover {\r\n    background-color: tomato;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ContactInfo } from \"styles/Contacts.styled\";\r\nimport { Contact } from \"styles/Contacts.styled\";\r\nimport { DeleteBtn } from \"styles/Contacts.styled\";\r\nimport { ImAddressBook } from \"react-icons/im\";\r\nimport { ContactsList } from \"styles/Contacts.styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"redux/contacts/contacts-actions\";\r\n\r\nconst Contacts = () => {\r\n  const getFilterContacts = (allContacts, filter) => {\r\n    const normalizedFilterValue = filter.toLowerCase().trim();\r\n\r\n    const filtredContacts = allContacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilterValue)\r\n    );\r\n    return filtredContacts;\r\n  };\r\n\r\n  const contacts = useSelector((state) =>\r\n    getFilterContacts(state.contacts.items, state.contacts.filter)\r\n  );\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      <ContactsList>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <Contact key={id}>\r\n            <ContactInfo>\r\n              <ImAddressBook /> {name}: {number}\r\n            </ContactInfo>\r\n            <DeleteBtn\r\n              onClick={() => dispatch(deleteContact(id))}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </DeleteBtn>\r\n          </Contact>\r\n        ))}\r\n      </ContactsList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 24px;\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${(props) => props.theme.secondary};\r\n  background-color: ${(props) => props.theme.main};\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  padding: 24px;\r\n`;\r\n","import { Input, Label } from \"styles/Form.styled\";\r\nimport React from \"react\";\r\nimport { Section } from \"styles/App.styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"redux/contacts/contacts-actions\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector((state) => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Section>\r\n      <Label>\r\n        Find contatcs by Name\r\n        <Input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n        />\r\n      </Label>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import Form from \"components/Form/Form\";\r\nimport Contacts from \"components/Contacts/Contacts\";\r\nimport Filter from \"components/Filter/Filter\";\r\nimport { MainContainer } from \"styles/App.styled\";\r\nimport { Title } from \"../../styles/App.styled\";\r\n\r\nfunction App() {\r\n  return (\r\n    <MainContainer>\r\n      <Title>Phonebook</Title>\r\n      <Form />\r\n      <Filter />\r\n      <Contacts />\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { addContact, deleteContact, changeFilter } from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => {\r\n    if (state.find((contact) => contact.name === payload.name)) {\r\n      alert(`${payload.name} is alredy in contacts `);\r\n      return state;\r\n    }\r\n    return (state = [payload, ...state]);\r\n  },\r\n  [deleteContact]: (state, { payload }) => {\r\n    return state.filter((contact) => contact.id !== payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n\r\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: \"filter\",\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}